name: CI

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

      # redis:
      #   image: redis
      #   ports:
      #     - 6379:6379
      #   options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
      - name: Install packages
        run: sudo apt-get update && sudo apt-get install --no-install-recommends -y build-essential git pkg-config google-chrome-stable

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Check PostgreSQL
        run: |
          echo "PostgreSQL version:"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "SELECT version();"
          echo "PostgreSQL running status:"
          pg_isready -h localhost -p 5432
          echo "Listing current databases:"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "\l"

      - name: Setup database
        env:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_SSL_MODE: prefer
          DATABASE_NAME: llm_mania_test
          # REDIS_URL: redis://localhost:6379/0
        run: |
          echo "Checking PostgreSQL connection..."
          pg_isready -h localhost -p 5432 -U postgres
          
          echo "Attempting to create database via psql..."
          PGPASSWORD=postgres psql -h localhost -U postgres -c "DROP DATABASE IF EXISTS llm_mania_test;"
          PGPASSWORD=postgres psql -h localhost -U postgres -c "CREATE DATABASE llm_mania_test;"
          
          echo "Running migrations instead of loading schema..."
          bin/rails db:migrate
          
          echo "Loading seeds..."
          bin/rails db:seed
          
          echo "Database setup completed."

      - name: Run tests
        env:
          RAILS_ENV: test
          POSTGRES_HOST: localhost
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_PORT: 5432
          POSTGRES_SSL_MODE: prefer
          DATABASE_NAME: llm_mania_test
          # REDIS_URL: redis://localhost:6379/0
        run: |
          bin/rails test test:system

      - name: Keep screenshots from failed system tests
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: screenshots
          path: ${{ github.workspace }}/tmp/screenshots
          if-no-files-found: ignore
